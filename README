WARNING: do not run this against any NTP server you do not personally run.  It
sends one packet per second, which will annoy any public NTP server operator,
and likely get your client banned.

Requires the perl modules Socket::MsgHdr and Time::HiRes

This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.

ntpd.conf:
server 127.127.28.x minpoll 6 maxpoll 6
fudge 127.127.28.x time1 0.000 stratum 1

For x=0 or x=1, this program will need to run as root.  For x=2 or x=3, the
shared memory permission is world writable (consider the security problems
before doing that).  The ntp_shmid needs to be passed as an option for x!=0

TODO:
 * Automatically detecting/calculating max_rtt would be nice
 * Figure out a way to deal with static shifts in latency that would come from route changes (perhaps by monitoring min_rtt)
 * Evaluate using the high jitter direction + rtt-based scaling as a second data point

More info: http://blog.dan.drown.org/stratum-2-ntp-over-a-cable-modem/

Also available is the ntp-dump client, which will show you the raw NTP data:

	$ ./ntp-dump --hostname=clock.lan
	IP: 10.1.2.192
	Stratum: 1 (PPS)
	Client Transmit: 1432576029.775497
	Server Reference: 1432576015.499999
	Server Recieve: 1432576029.775743
	Server Transmit: 1432576029.776051
	Client Recieve: 1432576029.776324
	RTT: 0.827 ms
	Offset: -0.475 ms
	Flags leap=0 version=4 mode=4
	Poll=0 precision=-20
	Root Delay: 0.000000
	Root Dispersion 0.000015
